plugins {
	id 'java-library'
}

sourceCompatibility = 11
targetCompatibility = 11
version = ARTIFACT_VERSION
def group = 'goa.systems'

configurations {
	testImplementation.extendsFrom(fullSetup)
}

dependencies {

	implementation 'org.slf4j:slf4j-api:2.0.6'
	
	/* Specify all dependencies in configuration fullSetup that are conveniently used during development and
	   that allow execution of the application but which are optional and up to the customer to define. */
	fullSetup ('ch.qos.logback:logback-core:1.4.5') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
	fullSetup ('ch.qos.logback:logback-classic:1.4.5') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

test {
	useJUnitPlatform()
}

repositories {
	mavenCentral()
}

task export(group: 'build', description: 'Exports application.') {
	
	dependsOn build, jar
	
	doLast {
	
		copy {
			from "build/libs"
			into "build/export/lib"
			include "*.jar"
		}
		
		copy {
			from configurations.runtimeClasspath
			from configurations.fullSetup
			into 'build/export/lib'
		}
		
		copy {
			from 'src/test/resources/logback.xml'
			into 'build/export/conf'
		}
	}
}

task writeVariables(group: 'build', description: 'Writes variables for maven') {
	dependsOn export
	doLast {
		
		def artifact = project.archivesBaseName.substring(group.size() + 1)
        file("build/export/vars").text = """export VERSION=${version}\nexport GROUP=${group}\nexport ARTIFACT=${artifact}"""
    }
}
		
task distribute(type: Tar, group: 'build', description: 'Creates tgz distribution.') {
    dependsOn writeVariables
    from 'build/export'
    archiveExtension = 'tar.gz'
    compression = Compression.GZIP
}

java {
	withSourcesJar()
	withJavadocJar()
}